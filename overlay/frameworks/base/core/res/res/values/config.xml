<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2020, Pavel Dubrova <pashadubrova@gmail.com>
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- Enable Night display, which requires HWC 2.0. -->
    <bool name="config_nightDisplayAvailable">true</bool>

<!-- Whether the display blanks itself when transitioning from a doze to a non-doze state -->
    <bool name="config_displayBlanksAfterDoze">false</bool>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
                  The N entries of this array define N + 1 zones as follows:
         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1:    array[N] <= LUX < infinity
         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>10</item>
        <item>30</item>
        <item>100</item>
        <item>200</item>
        <item>400</item>
        <item>1000</item>
        <item>2000</item>
        <item>3000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
                  in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>12</item>   <!-- 0-10 -->
        <item>46</item>   <!-- 10-30 -->
        <item>126</item>   <!-- 30-100 -->
        <item>148</item>   <!-- 100-200 -->
        <item>148</item>   <!-- 200-400 -->
        <item>168</item>   <!-- 400-1000 -->
        <item>200</item>  <!-- 1000-2000 -->
        <item>226</item>  <!-- 2000-3000 -->
        <item>255</item> <!-- 3000+ -->
    </integer-array>

    <!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDim">1</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">1</integer>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">true</bool>

    <!-- Default value for led color when battery is low on charge -->
    <integer name="config_notificationsBatteryLowARGB">0x00FF0000</integer>

    <!-- Default value for led color when battery is medium charged -->
    <integer name="config_notificationsBatteryMediumARGB">0x000000FF</integer>

    <!-- Default value for led color when battery is fully charged -->
    <integer name="config_notificationsBatteryFullARGB">0x0000FF00</integer>
    
     <!-- Is the battery LED intrusive? -->
    <bool name="config_intrusiveBatteryLed">true</bool>
     <!-- Does the notification LED support multiple colors?
         Used to decide if the user can change the colors -->
    <bool name="config_multiColorNotificationLed">true</bool>
    <!-- Does the battery LED support multiple colors?
	Used to decide if the user can change the colors -->
    <bool name="config_multiColorBatteryLed">true</bool>
    <!-- All the capabilities of the LEDs on this device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following capabilities present:
         LIGHTS_RGB_NOTIFICATION_LED = 1
         LIGHTS_RGB_BATTERY_LED = 2
         LIGHTS_MULTIPLE_NOTIFICATION_LED = 4 (deprecated)
         LIGHTS_PULSATING_LED = 8
         LIGHTS_SEGMENTED_BATTERY_LED = 16
         LIGHTS_ADJUSTABLE_NOTIFICATION_LED_BRIGHTNESS = 32
         LIGHTS_BATTERY_LED = 64
         For example, a device with notification and battery lights
         that support pulsating and RGB control would set this config
         to 75. -->
    <integer name="config_deviceLightCapabilities">75</integer>

    <!-- Hardware 'face' keys present on the device, stored as a bit field. </resources>
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">83</integer>

    <!-- Hardware keys present on the device with the ability to wake, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareWakeKeys">64</integer>
    
      <!-- Disable rounded corners on windows to improve graphics performance -->
    <bool name="config_supportsRoundedCornersOnWindows">false</bool>
     <!-- Flag indicating whether the surface flinger has limited
        alpha compositing functionality in hardware.  If set, the window
        manager will disable alpha trasformation in animations where not
        strictly needed. -->
    <bool name="config_sf_limitedAlpha">true</bool>

</resources>
